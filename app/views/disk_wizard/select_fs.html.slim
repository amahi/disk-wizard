javascript:
    google.load("visualization", "1", {
        packages: ["corechart"]
    });
    google.setOnLoadCallback(drawChart);
    function drawChart() {
        var data = google.visualization.arrayToDataTable([
            ['disk',
                'sda1', { role: 'tooltip' }, { role: 'style' }, { role: 'annotation' },
                'sda2', { role: 'tooltip' }, { role: 'style' }, { role: 'annotation' },
                'Free Space', { role: 'tooltip' }, { role: 'style' }, { role: 'annotation' },
                'sda4', { role: 'tooltip' }, { role: 'style' }, { role: 'annotation' }
            ],
            ['sda',
                12, 'Primary', 'stroke-color: #00FFBB; stroke-width: 5;fill-opacity: 0.9', "/dev/sda1 12GB",
                24, 'Logical', 'stroke-color: #775588; stroke-width: 5; fill-opacity: 0.9', "/dev/sda1 24GB",
                5, "Logical", 'stroke-color: #775588; stroke-opacity: 0.9; stroke-width: 5; fill-opacity: 0.4', 'Free space 5GB',
                20, 'Logical', 'stroke-color: #775588; stroke-opacity: 0.9; stroke-width: 5; fill-opacity: 0.9', "/dev/sda3 20GB"],
        ]);

        var options = {
            annotations: {
                textStyle: {
                    fontName: 'Times-Roman',
                    fontSize: 14,
                }
            },
            width: '100%',
            backgroundColor: '#F2F2F2',
            height: 100,
            legend: {
                position: 'top',
                maxLines: 10
            },
            bar: {
                groupWidth: '100%'
            },
            isStacked: true,
            enableInteractivity: true,
            hAxis: {
                viewWindowMode: 'maximized',
                gridlines: {
                    color: 'transparent'
                },
                format: '#GB'
            },
            chartArea: {
                width: '95%'
            },
            legend: {
                position: 'top',
                alignment: 'center'
            },
        };

        var chart = new google.visualization.BarChart(document.getElementById('disk_stats'));
        google.visualization.events.addListener(chart, 'select', function () {
            var selection = chart.getSelection();
            // alert(data.getValue(selection[0].row, 1));
        });
        chart.draw(data, options);
      }

.panel-body
  /!
    div class="row"
    <div class="well" id="disk_stats"
    <p class="bg-danger"
    Something went wrong!
    </p
    </div
    </div

  javascript:
    function check() {
        var selected_partition = $("#partition").attr("value");
        if (typeof selected_partition === 'undefined') {
            alert("No partition selected! (" + $("#model").attr('value') + ").");
            return false;
        }
    }

    $(function () {
        $('.format').change(function () {
            var $this = $(this);
            // $this will contain a reference to the checkbox
            if ($this.is(':checked')) {
                $('#fs_selector').slideDown();
            } else {
                $('#fs_selector').slideUp();
            }
        });
    });

    $(function () {
        var rows = $('tr:not(:first) td:not(:last-child)');
        rows.on('click', function (e) {
            var row = $(this);
            row = row.closest('tr');

            if (row.hasClass('info') || row.hasClass("danger")) {
                if (row.hasClass("danger")) {
                    row.removeClass('danger');
                    row.addClass('warning');
                } else {
                    row.removeClass('info');
                }
                $("#proceed").html("Skip");
                $("#partition").removeAttr("value");
                $('input.format').not(this).prop('checked', false);
            } else {
                if (row.hasClass("warning")) {
                    rows.closest('tr').removeClass('info');
                    row.addClass('danger');
                } else {
                    rows.closest('tr').removeClass('danger');
                    rows.closest('tr').removeClass('info');
                    row.addClass('info');
                }
                $('input.format').not(this).prop('checked', false);
                $("#proceed").html("Next");
                var path = row.attr("path");
                $("#partition").attr("value", path);
            }

        });

        $(document).bind('selectstart dragstart', function (e) {
            e.preventDefault();
            return false;
        });
    });

  = form_tag(defined?(disk_wizards_engine) ? disk_wizards_engine.manage_path : manage_path, {method: "POST", id: "select_fs", onsubmit: "return check()"})
  = hidden_field_tag 'device', @selected_disk.path
  = hidden_field_tag 'model', @selected_disk.model
  = hidden_field_tag 'partition', nil

  .row.mt-2.mb-2
    #contextMenu
      ul.dropdown-menu role="menu" 
        li
          a href="#" tabindex="-1"
            | New
        li
          a href="#" tabindex="-1"
            | Delete
        li.divider
        li
          a href="#" tabindex="-1"  
            | Resize/Move
        li.divider
        li
          a href="#" tabindex="-1"
            | Copy
        li
          a href="#" tabindex="-1"
            | Paste
        li.divider
        li.dropdown-submenu
          a href="#" tabindex="-1"  
            | Format to
          ul.dropdown-menu
            li
              a href="#" tabindex="-1"
                | NTFS
            li
              a href="#" tabindex="-1"
                | Ext4
            li
              a href="#" tabindex="-1"
                | Ext3
            li
              a href="#" tabindex="-1"
                | Fat32

    css:
      .settings-table {
          margin: 0 auto;
          border: 1px solid #e8e8e8;
          -moz-border-radius: 5px;
          -webkit-border-radius: 5px;
          border-radius: 5px;
      }

    table.settings.table-bordered.table style="border: 0px;"
      thead
        tr
          - device = @selected_disk
          - unless device.partitions.blank?
            th style=("text-align: center;")  Mount
            th style=("text-align: center;")  Label
            th style=("text-align: center;")  FStype
            th style=("text-align: center;")  Size
            th style=("text-align: center;")  Format
      tbody
        /!
          | device['partitions'] reffrence
          | "TYPE"=>"part", "SIZE"=>"104857600", "PATH"=>"/dev/sda1", "MOUNTPOINT"=>nil, "FSTYPE"=>"devtmpfs"

        - unless device.partitions.blank?
          - for partition in device.partitions
            tr data-target="#contextMenu" data-toggle="context" path="#{partition.path}" style=("position: relative;cursor: pointer;") class="#{!!(user_selections['path'] == partition.path rescue false) ? 'info context' : 'context'}"

              td title=("Mount point")
                = partition.mountpoint || "No mount point"
              td title=("Disk name")
                = partition.label
              td
                - if partition.fstype.nil?
                  span.glyphicon.glyphicon-warning-sign
                    | Unknown
                - else
                  = partition.fstype
              td title=("Total size")
                = number_to_human_size partition.size
              td
                label
                  = check_box_tag(:format, 1, !!(user_selections['format'] && (user_selections['path'] == partition.path) rescue false), class: 'format')
       
        tr style=("position: relative; cursor: pointer; margin: 0;") path="#{device.path}" class="#{ !!(user_selections['format'] && (user_selections['partition'] == device.path) rescue false) ? 'danger' : 'warning' }"
          td colspan="4"
            | Format entire disk
          td style=("width: 1%;") 
            label
              = check_box_tag(:format, 1, !!(user_selections['format'] && (user_selections['partition'] == device.path) rescue false), class: 'format')

  .row
    #fs_selector.col-md-5.col-md-offset-4 style=("display: none;") 
      div
        ul.list-group
          li.list-group-item.list-group-item-success
            | Please select a file system type
          = select_tag :fs_type, options_for_select([["Ext4", 0], ["Ext3", 1], ["NTFS", 2], ["FAT32", 3]], 0), class: "form-control"

  .row.mt-2
    = link_to(defined?(disk_wizards_engine) ? disk_wizards_engine.select_path : select_path, class: "btn btn-default back-button-wizard") do
      | ← Back
    = link_to '#', :onclick => "$('#select_fs').submit()", style: "float: right;", class: "btn btn-success right-button-wizard" do
      span#proceed Skip
      | →
